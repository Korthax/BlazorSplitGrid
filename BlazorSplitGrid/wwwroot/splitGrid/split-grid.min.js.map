{"version":3,"file":"split-grid.min.js","sources":["../../grid-template-utils/dist/grid-template-utils.es.js","../src/util.js","../src/getMatchedCSSRules.js","../src/Gutter.js","../src/index.js"],"sourcesContent":["var numeric = function (value, unit) { return Number(value.slice(0, -1 * unit.length)); };\n\nvar parseValue = function (value) {\n    if (value.endsWith('px'))\n        { return { value: value, type: 'px', numeric: numeric(value, 'px') } }\n    if (value.endsWith('fr'))\n        { return { value: value, type: 'fr', numeric: numeric(value, 'fr') } }\n    if (value.endsWith('%'))\n        { return { value: value, type: '%', numeric: numeric(value, '%') } }\n    if (value === 'auto') { return { value: value, type: 'auto' } }\n    return null\n};\n\nvar parse = function (rule) { return rule.split(' ').map(parseValue); };\n\nvar combine = function (rule, tracks) {\n    var prevTracks = rule ? rule.split(' ') : [];\n\n    tracks.forEach(function (track, i) {\n        if (i > prevTracks.length - 1) {\n            throw new Error(\n                (\"Unable to set size of track index \" + i + \", there are only \" + (prevTracks.length) + \" tracks in the grid layout.\")\n            )\n        }\n\n        prevTracks[i] = track.value\n            ? track.value\n            : (\"\" + (track.numeric) + (track.type));\n    });\n\n    return prevTracks.join(' ')\n};\n\nvar getSizeAtTrack = function (index, tracks, gap, end) {\n    if ( gap === void 0 ) gap = 0;\n    if ( end === void 0 ) end = false;\n\n    var newIndex = end ? index + 1 : index;\n    var trackSum = tracks\n        .slice(0, newIndex)\n        .reduce(function (accum, value) { return accum + value.numeric; }, 0);\n    var gapSum = gap ? index * gap : 0;\n\n    return trackSum + gapSum\n};\n\nexport { combine, getSizeAtTrack, parse };\n","export const getStyles = (rule, ownRules, matchedRules) =>\n    [...ownRules, ...matchedRules]\n        .map(r => r.style[rule])\n        .filter(style => style !== undefined && style !== '')\n\nexport const getGapValue = (unit, size) => {\n    if (size.endsWith(unit)) {\n        return Number(size.slice(0, -1 * unit.length))\n    }\n    return null\n}\n\nexport const firstNonZero = tracks => {\n    // eslint-disable-next-line no-plusplus\n    for (let i = 0; i < tracks.length; i++) {\n        if (tracks[i].numeric > 0) {\n            return i\n        }\n    }\n    return null\n}\n\nexport const NOOP = () => false\n\nexport const defaultWriteStyle = (element, gridTemplateProp, style) => {\n    // eslint-disable-next-line no-param-reassign\n    element.style[gridTemplateProp] = style\n}\n\nexport const getOption = (options, propName, def) => {\n    const value = options[propName]\n    if (value !== undefined) {\n        return value\n    }\n    return def\n}\n","export default el =>\n    []\n        .concat(\n            ...Array.from(el.ownerDocument.styleSheets).map(s => {\n                let rules = []\n\n                try {\n                    rules = Array.from(s.cssRules || [])\n                } catch (e) {\n                    // Ignore results on security error\n                }\n\n                return rules\n            }),\n        )\n        .filter(r => {\n            let matches = false\n            try {\n                matches = el.matches(r.selectorText)\n            } catch (e) {\n                // Ignore matching erros\n            }\n\n            return matches\n        })\n","import { parse, getSizeAtTrack } from 'grid-template-utils'\nimport {\n    getStyles,\n    getGapValue,\n    firstNonZero,\n    NOOP,\n    defaultWriteStyle,\n    getOption,\n} from './util'\nimport getMatchedCSSRules from './getMatchedCSSRules'\n\nconst gridTemplatePropColumns = 'grid-template-columns'\nconst gridTemplatePropRows = 'grid-template-rows'\n\nclass Gutter {\n    constructor(direction, options, parentOptions) {\n        this.direction = direction\n        this.element = options.element\n        this.track = options.track\n\n        if (direction === 'column') {\n            this.gridTemplateProp = gridTemplatePropColumns\n            this.gridGapProp = 'grid-column-gap'\n            this.cursor = getOption(\n                parentOptions,\n                'columnCursor',\n                getOption(parentOptions, 'cursor', 'col-resize'),\n            )\n            this.snapOffset = getOption(\n                parentOptions,\n                'columnSnapOffset',\n                getOption(parentOptions, 'snapOffset', 30),\n            )\n            this.dragInterval = getOption(\n                parentOptions,\n                'columnDragInterval',\n                getOption(parentOptions, 'dragInterval', 1),\n            )\n            this.clientAxis = 'clientX'\n            this.optionStyle = getOption(parentOptions, 'gridTemplateColumns')\n        } else if (direction === 'row') {\n            this.gridTemplateProp = gridTemplatePropRows\n            this.gridGapProp = 'grid-row-gap'\n            this.cursor = getOption(\n                parentOptions,\n                'rowCursor',\n                getOption(parentOptions, 'cursor', 'row-resize'),\n            )\n            this.snapOffset = getOption(\n                parentOptions,\n                'rowSnapOffset',\n                getOption(parentOptions, 'snapOffset', 30),\n            )\n            this.dragInterval = getOption(\n                parentOptions,\n                'rowDragInterval',\n                getOption(parentOptions, 'dragInterval', 1),\n            )\n            this.clientAxis = 'clientY'\n            this.optionStyle = getOption(parentOptions, 'gridTemplateRows')\n        }\n\n        this.onDragStart = getOption(parentOptions, 'onDragStart', NOOP)\n        this.onDragEnd = getOption(parentOptions, 'onDragEnd', NOOP)\n        this.onDrag = getOption(parentOptions, 'onDrag', NOOP)\n        this.writeStyle = getOption(\n            parentOptions,\n            'writeStyle',\n            defaultWriteStyle,\n        )\n\n        this.startDragging = this.startDragging.bind(this)\n        this.stopDragging = this.stopDragging.bind(this)\n        this.drag = this.drag.bind(this)\n\n        this.minSizeStart = options.minSizeStart\n        this.minSizeEnd = options.minSizeEnd\n\n        if (options.element) {\n            this.element.addEventListener('mousedown', this.startDragging)\n            this.element.addEventListener('touchstart', this.startDragging)\n        }\n    }\n\n    getDimensions() {\n        const {\n            width,\n            height,\n            top,\n            bottom,\n            left,\n            right,\n        } = this.grid.getBoundingClientRect()\n\n        if (this.direction === 'column') {\n            this.start = top\n            this.end = bottom\n            this.size = height\n        } else if (this.direction === 'row') {\n            this.start = left\n            this.end = right\n            this.size = width\n        }\n    }\n\n    getSizeAtTrack(track, end) {\n        return getSizeAtTrack(\n            track,\n            this.computedPixels,\n            this.computedGapPixels,\n            end,\n        )\n    }\n\n    getSizeOfTrack(track) {\n        return this.computedPixels[track].numeric\n    }\n\n    getRawTracks() {\n        const tracks = getStyles(\n            this.gridTemplateProp,\n            [this.grid],\n            getMatchedCSSRules(this.grid),\n        )\n        if (!tracks.length) {\n            if (this.optionStyle) return this.optionStyle\n\n            throw Error('Unable to determine grid template tracks from styles.')\n        }\n        return tracks[0]\n    }\n\n    getGap() {\n        const gap = getStyles(\n            this.gridGapProp,\n            [this.grid],\n            getMatchedCSSRules(this.grid),\n        )\n        if (!gap.length) {\n            return null\n        }\n        return gap[0]\n    }\n\n    getRawComputedTracks() {\n        return window.getComputedStyle(this.grid)[this.gridTemplateProp]\n    }\n\n    getRawComputedGap() {\n        return window.getComputedStyle(this.grid)[this.gridGapProp]\n    }\n\n    setTracks(raw) {\n        this.tracks = raw.split(' ')\n        this.trackValues = parse(raw)\n    }\n\n    setComputedTracks(raw) {\n        this.computedTracks = raw.split(' ')\n        this.computedPixels = parse(raw)\n    }\n\n    setGap(raw) {\n        this.gap = raw\n    }\n\n    setComputedGap(raw) {\n        this.computedGap = raw\n        this.computedGapPixels = getGapValue('px', this.computedGap) || 0\n    }\n\n    getMousePosition(e) {\n        if ('touches' in e) return e.touches[0][this.clientAxis]\n        return e[this.clientAxis]\n    }\n\n    startDragging(e) {\n        if ('button' in e && e.button !== 0) {\n            return\n        }\n\n        // Don't actually drag the element. We emulate that in the drag function.\n        e.preventDefault()\n\n        if (this.element) {\n            this.grid = this.element.parentNode\n        } else {\n            this.grid = e.target.parentNode\n        }\n\n        this.getDimensions()\n        this.setTracks(this.getRawTracks())\n        this.setComputedTracks(this.getRawComputedTracks())\n        this.setGap(this.getGap())\n        this.setComputedGap(this.getRawComputedGap())\n\n        const trackPercentage = this.trackValues.filter(\n            track => track.type === '%',\n        )\n        const trackFr = this.trackValues.filter(track => track.type === 'fr')\n\n        this.totalFrs = trackFr.length\n\n        if (this.totalFrs) {\n            const track = firstNonZero(trackFr)\n\n            if (track !== null) {\n                this.frToPixels =\n                    this.computedPixels[track].numeric / trackFr[track].numeric\n            }\n        }\n\n        if (trackPercentage.length) {\n            const track = firstNonZero(trackPercentage)\n\n            if (track !== null) {\n                this.percentageToPixels =\n                    this.computedPixels[track].numeric /\n                    trackPercentage[track].numeric\n            }\n        }\n\n        // get start of gutter track\n        const gutterStart = this.getSizeAtTrack(this.track, false) + this.start\n        this.dragStartOffset = this.getMousePosition(e) - gutterStart\n\n        this.aTrack = this.track - 1\n\n        if (this.track < this.tracks.length - 1) {\n            this.bTrack = this.track + 1\n        } else {\n            throw Error(\n                `Invalid track index: ${this.track}. Track must be between two other tracks and only ${this.tracks.length} tracks were found.`,\n            )\n        }\n\n        this.aTrackStart = this.getSizeAtTrack(this.aTrack, false) + this.start\n        this.bTrackEnd = this.getSizeAtTrack(this.bTrack, true) + this.start\n\n        // Set the dragging property of the pair object.\n        this.dragging = true\n\n        // All the binding. `window` gets the stop events in case we drag out of the elements.\n        window.addEventListener('mouseup', this.stopDragging)\n        window.addEventListener('touchend', this.stopDragging)\n        window.addEventListener('touchcancel', this.stopDragging)\n        window.addEventListener('mousemove', this.drag)\n        window.addEventListener('touchmove', this.drag)\n\n        // Disable selection. Disable!\n        this.grid.addEventListener('selectstart', NOOP)\n        this.grid.addEventListener('dragstart', NOOP)\n\n        this.grid.style.userSelect = 'none'\n        this.grid.style.webkitUserSelect = 'none'\n        this.grid.style.MozUserSelect = 'none'\n        this.grid.style.pointerEvents = 'none'\n\n        // Set the cursor at multiple levels\n        this.grid.style.cursor = this.cursor\n        window.document.body.style.cursor = this.cursor\n\n        this.onDragStart(this.direction, this.track)\n    }\n\n    stopDragging() {\n        this.dragging = false\n\n        // Remove the stored event listeners. This is why we store them.\n        this.cleanup()\n\n        this.onDragEnd(this.direction, this.track)\n\n        if (this.needsDestroy) {\n            if (this.element) {\n                this.element.removeEventListener(\n                    'mousedown',\n                    this.startDragging,\n                )\n                this.element.removeEventListener(\n                    'touchstart',\n                    this.startDragging,\n                )\n            }\n            this.destroyCb()\n            this.needsDestroy = false\n            this.destroyCb = null\n        }\n    }\n\n    drag(e) {\n        let mousePosition = this.getMousePosition(e)\n\n        const gutterSize = this.getSizeOfTrack(this.track)\n        const minMousePosition =\n            this.aTrackStart +\n            this.minSizeStart +\n            this.dragStartOffset +\n            this.computedGapPixels\n        const maxMousePosition =\n            this.bTrackEnd -\n            this.minSizeEnd -\n            this.computedGapPixels -\n            (gutterSize - this.dragStartOffset)\n        const minMousePositionOffset = minMousePosition + this.snapOffset\n        const maxMousePositionOffset = maxMousePosition - this.snapOffset\n\n        if (mousePosition < minMousePositionOffset) {\n            mousePosition = minMousePosition\n        }\n\n        if (mousePosition > maxMousePositionOffset) {\n            mousePosition = maxMousePosition\n        }\n\n        if (mousePosition < minMousePosition) {\n            mousePosition = minMousePosition\n        } else if (mousePosition > maxMousePosition) {\n            mousePosition = maxMousePosition\n        }\n\n        let aTrackSize =\n            mousePosition -\n            this.aTrackStart -\n            this.dragStartOffset -\n            this.computedGapPixels\n        let bTrackSize =\n            this.bTrackEnd -\n            mousePosition +\n            this.dragStartOffset -\n            gutterSize -\n            this.computedGapPixels\n\n        if (this.dragInterval > 1) {\n            const aTrackSizeIntervaled =\n                Math.round(aTrackSize / this.dragInterval) * this.dragInterval\n            bTrackSize -= aTrackSizeIntervaled - aTrackSize\n            aTrackSize = aTrackSizeIntervaled\n        }\n\n        if (aTrackSize < this.minSizeStart) {\n            aTrackSize = this.minSizeStart\n        }\n\n        if (bTrackSize < this.minSizeEnd) {\n            bTrackSize = this.minSizeEnd\n        }\n\n        if (this.trackValues[this.aTrack].type === 'px') {\n            this.tracks[this.aTrack] = `${aTrackSize}px`\n        } else if (this.trackValues[this.aTrack].type === 'fr') {\n            if (this.totalFrs === 1) {\n                this.tracks[this.aTrack] = '1fr'\n            } else {\n                const targetFr = aTrackSize / this.frToPixels\n                this.tracks[this.aTrack] = `${targetFr}fr`\n            }\n        } else if (this.trackValues[this.aTrack].type === '%') {\n            const targetPercentage = aTrackSize / this.percentageToPixels\n            this.tracks[this.aTrack] = `${targetPercentage}%`\n        }\n\n        if (this.trackValues[this.bTrack].type === 'px') {\n            this.tracks[this.bTrack] = `${bTrackSize}px`\n        } else if (this.trackValues[this.bTrack].type === 'fr') {\n            if (this.totalFrs === 1) {\n                this.tracks[this.bTrack] = '1fr'\n            } else {\n                const targetFr = bTrackSize / this.frToPixels\n                this.tracks[this.bTrack] = `${targetFr}fr`\n            }\n        } else if (this.trackValues[this.bTrack].type === '%') {\n            const targetPercentage = bTrackSize / this.percentageToPixels\n            this.tracks[this.bTrack] = `${targetPercentage}%`\n        }\n\n        const style = this.tracks.join(' ')\n        this.writeStyle(this.grid, this.gridTemplateProp, style)\n        this.onDrag(this.direction, this.track, style)\n    }\n\n    cleanup() {\n        window.removeEventListener('mouseup', this.stopDragging)\n        window.removeEventListener('touchend', this.stopDragging)\n        window.removeEventListener('touchcancel', this.stopDragging)\n        window.removeEventListener('mousemove', this.drag)\n        window.removeEventListener('touchmove', this.drag)\n\n        if (this.grid) {\n            this.grid.removeEventListener('selectstart', NOOP)\n            this.grid.removeEventListener('dragstart', NOOP)\n\n            this.grid.style.userSelect = ''\n            this.grid.style.webkitUserSelect = ''\n            this.grid.style.MozUserSelect = ''\n            this.grid.style.pointerEvents = ''\n\n            this.grid.style.cursor = ''\n        }\n\n        window.document.body.style.cursor = ''\n    }\n\n    destroy(immediate = true, cb) {\n        if (immediate || this.dragging === false) {\n            this.cleanup()\n            if (this.element) {\n                this.element.removeEventListener(\n                    'mousedown',\n                    this.startDragging,\n                )\n                this.element.removeEventListener(\n                    'touchstart',\n                    this.startDragging,\n                )\n            }\n\n            if (cb) {\n                cb()\n            }\n        } else {\n            this.needsDestroy = true\n            if (cb) {\n                this.destroyCb = cb\n            }\n        }\n    }\n}\n\nexport default Gutter\n","import Gutter from './Gutter'\nimport { getOption } from './util'\n\nconst getTrackOption = (options, track, defaultValue) => {\n    if (track in options) {\n        return options[track]\n    }\n\n    return defaultValue\n}\n\nconst createGutter = (direction, options) => gutterOptions => {\n    if (gutterOptions.track < 1) {\n        throw Error(\n            `Invalid track index: ${gutterOptions.track}. Track must be between two other tracks.`,\n        )\n    }\n\n    const trackMinSizes =\n        direction === 'column'\n            ? options.columnMinSizes || {}\n            : options.rowMinSizes || {}\n    const trackMinSize = direction === 'column' ? 'columnMinSize' : 'rowMinSize'\n\n    return new Gutter(\n        direction,\n        {\n            minSizeStart: getTrackOption(\n                trackMinSizes,\n                gutterOptions.track - 1,\n                getOption(\n                    options,\n                    trackMinSize,\n                    getOption(options, 'minSize', 0),\n                ),\n            ),\n            minSizeEnd: getTrackOption(\n                trackMinSizes,\n                gutterOptions.track + 1,\n                getOption(\n                    options,\n                    trackMinSize,\n                    getOption(options, 'minSize', 0),\n                ),\n            ),\n            ...gutterOptions,\n        },\n        options,\n    )\n}\n\nclass Grid {\n    constructor(options) {\n        this.columnGutters = {}\n        this.rowGutters = {}\n\n        this.options = {\n            columnGutters: options.columnGutters || [],\n            rowGutters: options.rowGutters || [],\n            columnMinSizes: options.columnMinSizes || {},\n            rowMinSizes: options.rowMinSizes || {},\n            ...options,\n        }\n\n        this.options.columnGutters.forEach(gutterOptions => {\n            this.columnGutters[gutterOptions.track] = createGutter(\n                'column',\n                this.options,\n            )(gutterOptions)\n        })\n\n        this.options.rowGutters.forEach(gutterOptions => {\n            this.rowGutters[gutterOptions.track] = createGutter(\n                'row',\n                this.options,\n            )(gutterOptions)\n        })\n    }\n\n    addColumnGutter(element, track) {\n        if (this.columnGutters[track]) {\n            this.columnGutters[track].destroy()\n        }\n\n        this.columnGutters[track] = createGutter(\n            'column',\n            this.options,\n        )({\n            element,\n            track,\n        })\n    }\n\n    addRowGutter(element, track) {\n        if (this.rowGutters[track]) {\n            this.rowGutters[track].destroy()\n        }\n\n        this.rowGutters[track] = createGutter(\n            'row',\n            this.options,\n        )({\n            element,\n            track,\n        })\n    }\n\n    removeColumnGutter(track, immediate = true) {\n        if (this.columnGutters[track]) {\n            this.columnGutters[track].destroy(immediate, () => {\n                delete this.columnGutters[track]\n            })\n        }\n    }\n\n    removeRowGutter(track, immediate = true) {\n        if (this.rowGutters[track]) {\n            this.rowGutters[track].destroy(immediate, () => {\n                delete this.rowGutters[track]\n            })\n        }\n    }\n\n    handleDragStart(e, direction, track) {\n        if (direction === 'column') {\n            if (this.columnGutters[track]) {\n                this.columnGutters[track].destroy()\n            }\n\n            this.columnGutters[track] = createGutter(\n                'column',\n                this.options,\n            )({\n                track,\n            })\n            this.columnGutters[track].startDragging(e)\n        } else if (direction === 'row') {\n            if (this.rowGutters[track]) {\n                this.rowGutters[track].destroy()\n            }\n\n            this.rowGutters[track] = createGutter(\n                'row',\n                this.options,\n            )({\n                track,\n            })\n            this.rowGutters[track].startDragging(e)\n        }\n    }\n\n    destroy(immediate = true) {\n        Object.keys(this.columnGutters).forEach(track =>\n            this.columnGutters[track].destroy(immediate, () => {\n                delete this.columnGutters[track]\n            }),\n        )\n        Object.keys(this.rowGutters).forEach(track =>\n            this.rowGutters[track].destroy(immediate, () => {\n                delete this.rowGutters[track]\n            }),\n        )\n    }\n}\n\nexport default options => new Grid(options)\n"],"names":["numeric","value","unit","Number","slice","length","parseValue","endsWith","type","parse","rule","split","map","getStyles","ownRules","matchedRules","r","style","filter","undefined","firstNonZero","tracks","let","i","NOOP","defaultWriteStyle","element","gridTemplateProp","getOption","options","propName","def","const","el","concat","Array","from","ownerDocument","styleSheets","s","rules","cssRules","e","matches","selectorText","Gutter","direction","parentOptions","this","track","gridGapProp","cursor","snapOffset","dragInterval","clientAxis","optionStyle","onDragStart","onDragEnd","onDrag","writeStyle","startDragging","bind","stopDragging","drag","minSizeStart","minSizeEnd","addEventListener","getDimensions","grid","getBoundingClientRect","start","top","end","bottom","size","height","left","right","width","getSizeAtTrack","index","gap","newIndex","reduce","accum","computedPixels","computedGapPixels","getSizeOfTrack","getRawTracks","getMatchedCSSRules","Error","getGap","getRawComputedTracks","window","getComputedStyle","getRawComputedGap","setTracks","raw","trackValues","setComputedTracks","computedTracks","setGap","setComputedGap","computedGap","getMousePosition","touches","button","preventDefault","parentNode","target","trackPercentage","trackFr","totalFrs","frToPixels","percentageToPixels","gutterStart","dragStartOffset","aTrack","bTrack","aTrackStart","bTrackEnd","dragging","userSelect","webkitUserSelect","MozUserSelect","pointerEvents","document","body","cleanup","needsDestroy","removeEventListener","destroyCb","mousePosition","gutterSize","minMousePosition","maxMousePosition","aTrackSize","bTrackSize","aTrackSizeIntervaled","Math","round","targetFr","targetPercentage","join","destroy","immediate","cb","getTrackOption","defaultValue","createGutter","gutterOptions","trackMinSizes","columnMinSizes","rowMinSizes","trackMinSize","Object","Grid","columnGutters","rowGutters","forEach","addColumnGutter","addRowGutter","removeColumnGutter","removeRowGutter","handleDragStart","keys"],"mappings":"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"}
